# This file is autogenerated by maturin v0.14.17
# To update, run
#
#    maturin generate-ci github
#
name: CI

on:
  push:
    branches:
      - main
      - master
    tags:
      - "*"
    paths-ignore:
      - CHANGELOG.md
      - README.md
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  rust_checks:
    name: Checks for Rust
    runs-on: ubuntu-latest
    env:
      RUSTFLAGS: "-Dwarnings"
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          components: clippy
          override: true
      - name: Run Clippy, including Python features
        run: cargo clippy --features ui,use_rayon
  python_checks:
    name: Checks for Python
    runs-on: ubuntu-latest
    env:
      RUSTFLAGS: "-Dwarnings"
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          components: clippy
          override: true
      - name: Run Clippy, including Python features
        run: cargo clippy --features python,use_rayon
      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - name: Install mypy
        run: pip install --upgrade mypy
      - name: Run mypy
        run: mypy --cache-dir .mypy_cache --install-types --ignore-missing-imports --non-interactive --show-traceback py-rgrow/rgrow/
      - name: Run Ruff on Python code
        uses: chartboost/ruff-action@v1
        with:
          src: "./py-rgrow"
  linux:
    name: Python Linux builds
    needs: [python_checks]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [x86_64, aarch64, armv7]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist --find-interpreter
          sccache: "true"
          manylinux: auto
          working-directory: py-rgrow
          rust-toolchain: nightly
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: py-rgrow/dist
  deploy-docs:
    runs-on: ubuntu-latest
    needs: [python_checks]
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
          cache: pip
          cache-dependency-path: py-rgrow/docs/requirements-docs.txt

      - name: Install Python dependencies
        working-directory: py-rgrow/docs
        run: |
          pip install --upgrade pip
          pip install -r requirements-docs.txt
  windows:
    name: Python Windows builds
    needs: [python_checks]
    runs-on: windows-latest
    strategy:
      matrix:
        target: [x64]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          architecture: ${{ matrix.target }}
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist --find-interpreter
          sccache: "true"
          working-directory: py-rgrow
          rust-toolchain: nightly
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: py-rgrow/dist

  macos:
    name: Python MacOS builds
    needs: [python_checks]
    runs-on: macos-latest
    strategy:
      matrix:
        target: [x86_64, aarch64]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist --find-interpreter
          sccache: "true"
          working-directory: py-rgrow
          rust-toolchain: nightly
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: py-rgrow/dist

  sdist:
    needs: [python_checks]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Build sdist
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          working-directory: py-rgrow
      - name: Upload sdist
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: target/wheels

  python_release:
    name: Python PyPI Release
    runs-on: ubuntu-latest
    if: "startsWith(github.ref, 'refs/tags/')"
    needs: [linux, windows, macos, sdist]
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: wheels
      - name: Publish to PyPI
        uses: PyO3/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        with:
          command: upload
          args: --skip-existing *

  rust_release:
    name: Rust Crates.io Release
    runs-on: ubuntu-latest
    if: "startsWith(github.ref, 'refs/tags/')"
    needs: [rust_checks]
    steps:
      - uses: actions/checkout@v3
      - name: Publish to crates.io
        uses: actions-rs/cargo@v1
        with:
          command: publish
          token: ${{ secrets.CRATES_IO_TOKEN }}
          args: --allow-dirty
